#include <stdio.h>
#include <stdlib.h>
#include "vc.h"

int main(void)
{
   IVC *image, *image2, *image3, *image4, *new, *original;
    int i, nblobs;
    OVC *blobs;

    //image = vc_read_image("./TP1_A8544_A18854_A19334/P2/img2.ppm");
    image = vc_read_image("./img2.ppm");
    image2 = vc_image_new(image->width, image->height, 1, image->levels);
    image3 = vc_image_new(image->width, image->height, 1, image->levels);
    image4 = vc_image_new(image->width, image->height, 1, image->levels);
    new = vc_image_new(image->width, image->height, 1, image->levels);

    if (image == NULL)
    {
        printf("ERROR -> vc_read_image():\n\tFile not found!\n");
        getchar();
        return 0;
    }
    vc_rgb_get_blue_gray(image);
    vc_rgb_to_gray(image, image2);
    vc_gray_to_binary(image2, 100);
    vc_binary_close(image2, image3, 3);
    vc_binary_open(image3, image4, 3);

    blobs = vc_binary_blob_labelling(image4, new, &nblobs);

    vc_binary_blob_info(new, blobs, &nblobs);
    if (blobs != NULL)
    {
        printf("\nNumber of cells: %d\n", nblobs);
        for (i = 0; i < nblobs; i++)
        {
            printf("\n-> Cell %d", blobs[i].label);
            printf("\nArea: %d\n", blobs[i].area);

        }
        free(blobs);
    }

    if (blobs != NULL)
    {
        for (i = 0; i < nblobs; i++)
        {
            printf("\n")
        }

    }


    vc_write_image("Blue.pgm", image4);

    vc_image_free(image);
    vc_image_free(new);
    printf("\nPress any key to exit...\n");
    getchar();

    return 0;
}
